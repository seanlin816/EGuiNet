// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TwEInvoice.Infrastructure;

#nullable disable

namespace TwEInvoice.Infrastructure.Migrations
{
    [DbContext(typeof(TwEInvoiceDbContext))]
    [Migration("20240905043830_init_with_twinvoice")]
    partial class init_with_twinvoice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TwEInvoice.Domain.Invoices.InvoiceNumbers.InvoiceBook", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("bytea")
                        .HasColumnName("id");

                    b.Property<string>("AccountingPeriod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("accounting_period");

                    b.Property<int>("CurrentNumber")
                        .HasColumnType("integer")
                        .HasColumnName("current_number");

                    b.Property<int>("EndNumber")
                        .HasColumnType("integer")
                        .HasColumnName("end_number");

                    b.Property<int>("NextNumber")
                        .HasColumnType("integer")
                        .HasColumnName("next_number");

                    b.Property<int>("StartNumber")
                        .HasColumnType("integer")
                        .HasColumnName("start_number");

                    b.Property<string>("Track")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("track");

                    b.HasKey("Id")
                        .HasName("pk_invoice_books");

                    b.ToTable("invoice_books", (string)null);
                });

            modelBuilder.Entity("TwEInvoice.Domain.Invoices.TwInvoice", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("bytea")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Buyer", "TwEInvoice.Domain.Invoices.TwInvoice.Buyer#Buyer", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Address")
                                .HasColumnType("text")
                                .HasColumnName("buyer_address");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("buyer_name");

                            b1.Property<string>("TaxId")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("buyer_tax_id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("InvoiceNumber", "TwEInvoice.Domain.Invoices.TwInvoice.InvoiceNumber#InvoiceNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("SerialNumber")
                                .HasColumnType("integer")
                                .HasColumnName("invoice_number_serial_number");

                            b1.Property<string>("TrackId")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("invoice_number_track_id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Seller", "TwEInvoice.Domain.Invoices.TwInvoice.Seller#Seller", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Address")
                                .HasColumnType("text")
                                .HasColumnName("seller_address");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("seller_name");

                            b1.Property<string>("TaxId")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("seller_tax_id");
                        });

                    b.HasKey("Id")
                        .HasName("pk_tw_invoice");

                    b.ToTable("tw_invoice", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
